name: CI/CD
on:
  push:
    paths:
      - "backend/**"
  workflow_dispatch:

jobs:
  backend-CI:
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v2

      - name: JDK 11 설정
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "corretto"

      - name: Application YML 생성
        run: |
          mkdir -p backend/src/main/resources
          echo "${{ secrets.APPLICATION_PROD_YML }}" | base64 --decode > backend/src/main/resources/application-prod.yml
          echo "${{ secrets.APPLICATION_DEV_YML }}" | base64 --decode > backend/src/main/resources/application-dev.yml
          echo "${{ secrets.APPLICATION_AUTH_YML }}" | base64 --decode > backend/src/main/resources/application-auth.yml
          echo "${{ secrets.APPLICATION_MAIL_YML }}" | base64 --decode > backend/src/main/resources/application-mail.yml

      - name: Gradle 빌드
        run: |
          cd backend
          mkdir -p build/generated-snippets/
          chmod +x gradlew
          ./gradlew build
        shell: bash

      - name: Configure AWS credentials
        if: ${{ github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Dev S3에 업로드
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          mkdir -p before-deploy
          cp backend/build/libs/cabinet-*.jar before-deploy/
          cp scripts/deploy-dev.sh before-deploy/deploy.sh
          cp appspec.yml before-deploy/
          cp Dockerfile.dev before-deploy/Dockerfile
          cd before-deploy && zip -r before-deploy *
          cd ../ && mkdir -p deploy
          mv before-deploy/before-deploy.zip deploy/deploy.zip
          aws s3 cp deploy/deploy.zip s3://${{ secrets.AWS_S3_DEV_BUCKET_NAME }}/deploy.zip

          aws deploy create-deployment \
          --application-name ${{ secrets.AWS_CODEDEPLOY_DEV_APP_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ secrets.AWS_CODEDEPLOY_DEV_GROUP_NAME }} \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=${{ secrets.AWS_S3_DEV_BUCKET_NAME }},bundleType=zip,key=deploy.zip

      - name: Main S3에 업로드
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          mkdir -p before-deploy
          cp backend/build/libs/cabinet-*.jar before-deploy/
          cp scripts/deploy-main.sh before-deploy/deploy.sh
          cp appspec.yml before-deploy/
          cp Dockerfile.main before-deploy/Dockerfile
          cd before-deploy && zip -r before-deploy *
          cd ../ && mkdir -p deploy
          mv before-deploy/before-deploy.zip deploy/deploy.zip
          aws s3 cp deploy/deploy.zip s3://${{ secrets.AWS_S3_MAIN_BUCKET_NAME }}/deploy.zip

          aws deploy create-deployment \
          --application-name ${{ secrets.AWS_CODEDEPLOY_MAIN_APP_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ secrets.AWS_CODEDEPLOY_MAIN_GROUP_NAME }} \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=${{ secrets.AWS_S3_MAIN_BUCKET_NAME }},bundleType=zip,key=deploy.zip
