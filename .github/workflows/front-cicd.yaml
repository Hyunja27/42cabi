name: CI/CD
on:
  push:
    paths:
      - "frontend/**"

env:
  CUR_BRANCH: common/test/#1191

jobs:
  frontend-CI:
    runs-on: ubuntu-latest
    steps:
      - name: 체크아웃
        uses: actions/checkout@v2
      - name: Node.js 16.x Version
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: 종속 모듈들 캐싱
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/frontend/node_modules
          key: npm-packages-${{ hashFiles('**/frontend/package-lock.json') }}
        id: cache
      - name: 종속 모듈들 설치
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --prefix frontend
      # - name: lint 체크
      #   run: npm run lint --prefix frontend
      - name: 빌드 체크
        run: npm run build --prefix frontend
      # - name: 단위 테스트 체크
      #   run: npm run test --prefix frontend
      # - name: 통합 테스트 체크
      #   run: npm run test:e2e --prefix frontend

  frontend-CD-develop:
    name: deploy-develop
    runs-on: ubuntu-latest
    needs: [frontend-CI]
    if: ${{ github.ref == refs/heads/$CUR_BRANCH }}
    steps:
      - name: 리모트 쉘 접속
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY_NEW }}
          port: ${{ secrets.PORT }}
          script_stop: true
          script: |
            source $HOME/.bash_profile
            echo "해당 리포지토리로 이동"
            cd $HOME/42cabi_spring

            echo "리포지토리 pull"
            git pull origin $CUR_BRANCH

            echo "앱 빌드"
            cd frontend
            npm install
            npm run build
            mkdir -p dist/src/assets
            cp -r src/assets/images dist/src/assets

            echo "S3 배포"
            aws s3 sync ./dist s3://dev.cabi --profile=CABI

            echo "CloudFront 캐시 무효화"
            aws cloudfront create-invalidation --profile=CABI --distribution-id EWPTW52IH5L5C --paths '/*'

  # frontend-CD-main:
  #   name: deploy-main
  #   runs-on: ubuntu-latest
  #   needs: [frontend-CI]
  #   if: ${{ github.ref == 'refs/heads/main' }}
  #   steps:
  #     - name: 리모트 쉘 접속
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST_MAIN }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.KEY_NEW }}
  #         port: ${{ secrets.PORT }}
  #         script_stop: true
  #         script: |
  #           source $HOME/.bash_profile
  #           echo "해당 리포지토리로 이동"
  #           cd $HOME/42cabi_main
  #           echo "리포지토리 pull"
  #           git pull origin main
  #           echo "앱 빌드"
  #           cd $HOME/42cabi_main/backend
  #           npm run build:fe
  #           npm run deploy:main
  #           npm run invalidate:main
